// Code generated by goctl. DO NOT EDIT!
// Source: lib.proto

package lib

import (
	"context"

	"goecom/apps/lib/rpc/types/lib"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenerateTokenReq        = lib.GenerateTokenReq
	GenerateTokenResp       = lib.GenerateTokenResp
	GetMerchantReply        = lib.GetMerchantReply
	GetMerchantReq          = lib.GetMerchantReq
	GetMerchantUserReply    = lib.GetMerchantUserReply
	GetMerchantUserReq      = lib.GetMerchantUserReq
	GetMerchantUsersReply   = lib.GetMerchantUsersReply
	GetMerchantUsersReq     = lib.GetMerchantUsersReq
	GetMerchantsReply       = lib.GetMerchantsReply
	GetMerchantsReq         = lib.GetMerchantsReq
	MerchantUserLoginReply  = lib.MerchantUserLoginReply
	MerchantUserLoginReq    = lib.MerchantUserLoginReq
	MerchantUserRegisterReq = lib.MerchantUserRegisterReq

	Lib interface {
		GenerateToken(ctx context.Context, in *GenerateTokenReq, opts ...grpc.CallOption) (*GenerateTokenResp, error)
		GetMerchants(ctx context.Context, in *GetMerchantsReq, opts ...grpc.CallOption) (*GetMerchantsReply, error)
		GetMerchant(ctx context.Context, in *GetMerchantReq, opts ...grpc.CallOption) (*GetMerchantReply, error)
		GetMerchantUsers(ctx context.Context, in *GetMerchantUsersReq, opts ...grpc.CallOption) (*GetMerchantUsersReply, error)
		GetMerchantUser(ctx context.Context, in *GetMerchantUserReq, opts ...grpc.CallOption) (*GetMerchantUserReply, error)
		MerchantUserLogin(ctx context.Context, in *MerchantUserLoginReq, opts ...grpc.CallOption) (*MerchantUserLoginReply, error)
		MerchantUserRegister(ctx context.Context, in *MerchantUserRegisterReq, opts ...grpc.CallOption) (*MerchantUserLoginReply, error)
	}

	defaultLib struct {
		cli zrpc.Client
	}
)

func NewLib(cli zrpc.Client) Lib {
	return &defaultLib{
		cli: cli,
	}
}

func (m *defaultLib) GenerateToken(ctx context.Context, in *GenerateTokenReq, opts ...grpc.CallOption) (*GenerateTokenResp, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.GenerateToken(ctx, in, opts...)
}

func (m *defaultLib) GetMerchants(ctx context.Context, in *GetMerchantsReq, opts ...grpc.CallOption) (*GetMerchantsReply, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.GetMerchants(ctx, in, opts...)
}

func (m *defaultLib) GetMerchant(ctx context.Context, in *GetMerchantReq, opts ...grpc.CallOption) (*GetMerchantReply, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.GetMerchant(ctx, in, opts...)
}

func (m *defaultLib) GetMerchantUsers(ctx context.Context, in *GetMerchantUsersReq, opts ...grpc.CallOption) (*GetMerchantUsersReply, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.GetMerchantUsers(ctx, in, opts...)
}

func (m *defaultLib) GetMerchantUser(ctx context.Context, in *GetMerchantUserReq, opts ...grpc.CallOption) (*GetMerchantUserReply, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.GetMerchantUser(ctx, in, opts...)
}

func (m *defaultLib) MerchantUserLogin(ctx context.Context, in *MerchantUserLoginReq, opts ...grpc.CallOption) (*MerchantUserLoginReply, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.MerchantUserLogin(ctx, in, opts...)
}

func (m *defaultLib) MerchantUserRegister(ctx context.Context, in *MerchantUserRegisterReq, opts ...grpc.CallOption) (*MerchantUserLoginReply, error) {
	client := lib.NewLibClient(m.cli.Conn())
	return client.MerchantUserRegister(ctx, in, opts...)
}

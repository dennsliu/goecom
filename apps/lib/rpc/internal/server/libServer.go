// Code generated by goctl. DO NOT EDIT!
// Source: lib.proto

package server

import (
	"context"

	"goecom/apps/lib/rpc/internal/logic"
	"goecom/apps/lib/rpc/internal/svc"
	"goecom/apps/lib/rpc/types/lib"
)

type LibServer struct {
	svcCtx *svc.ServiceContext
	lib.UnimplementedLibServer
}

func NewLibServer(svcCtx *svc.ServiceContext) *LibServer {
	return &LibServer{
		svcCtx: svcCtx,
	}
}

func (s *LibServer) GenerateToken(ctx context.Context, in *lib.GenerateTokenReq) (*lib.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

func (s *LibServer) GetMerchants(ctx context.Context, in *lib.GetMerchantsReq) (*lib.GetMerchantsReply, error) {
	l := logic.NewGetMerchantsLogic(ctx, s.svcCtx)
	return l.GetMerchants(in)
}

func (s *LibServer) GetMerchant(ctx context.Context, in *lib.GetMerchantReq) (*lib.GetMerchantReply, error) {
	l := logic.NewGetMerchantLogic(ctx, s.svcCtx)
	return l.GetMerchant(in)
}

func (s *LibServer) GetMerchantUsers(ctx context.Context, in *lib.GetMerchantUsersReq) (*lib.GetMerchantUsersReply, error) {
	l := logic.NewGetMerchantUsersLogic(ctx, s.svcCtx)
	return l.GetMerchantUsers(in)
}

func (s *LibServer) GetMerchantUser(ctx context.Context, in *lib.GetMerchantUserReq) (*lib.GetMerchantUserReply, error) {
	l := logic.NewGetMerchantUserLogic(ctx, s.svcCtx)
	return l.GetMerchantUser(in)
}

func (s *LibServer) MerchantUserLogin(ctx context.Context, in *lib.MerchantUserLoginReq) (*lib.MerchantUserLoginReply, error) {
	l := logic.NewMerchantUserLoginLogic(ctx, s.svcCtx)
	return l.MerchantUserLogin(in)
}

func (s *LibServer) MerchantUserRegister(ctx context.Context, in *lib.MerchantUserRegisterReq) (*lib.MerchantUserLoginReply, error) {
	l := logic.NewMerchantUserRegisterLogic(ctx, s.svcCtx)
	return l.MerchantUserRegister(in)
}

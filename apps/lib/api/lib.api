syntax = "v1"
type (
	GetTokenReq   struct{}
	GetTokenReply {
		AccessToken  string `json:"accesstoken"`
		AccessExpire int64  `json:"accessexpire"`
		RefreshAfter int64  `json:"refreshafter"`
	}
	Merchant {
		Id        int64  `json:"id"`
		Name      string `json:"name"`
		Status    int64  `json:"status"`
		CreatedAt string `json:"createdat"`
		UpdatedAt string `json:"updatedat"`
	}
	MerchantAddReq {
		Name   string `json:"name"`
		Status int64  `json:"status"`
	}
	MerchantUpdateReq {
		Id     int64  `json:"id"`
		Name   string `json:"name"`
		Status int64  `json:"status"`
	}
	MerchantGetReq {
		Id int64 `json:"id"`
	}

	MerchantDeleteReq {
		Id string `json:"id"`
	}
	MerchantDeleteReply {
		Id string `json:"id"`
	}
	MerchantSearchReq {
		Keyword   string `json:"keyword"`
		Page      int64  `json:"page"`
		Status    int64  `json:"status"`
		PageSize  int64  `json:"pagesize"`
		OrderBy   string `json:"orderby"`
		OrderType int64  `json:"ordertype"`
	}
	MerchantSearchReply {
		Mechants []Merchant `json:"merchants"`
		IsEnd    bool       `json:"isend"`
		LastVal  int64      `json:"lastval"`
	}
	MerchantUser {
		Id          int64  `json:"id"`
		NickName    string `json:"nickname"`
		Email       string `json:"email"`
		UserName    string `json:"username"`
		Password    string `json:"password"`
		Telephone   string `json:"telephone"`
		Mobliephone string `json:"mobliephone"`
		MerchantId  int64  `json:"merchantid"`
		Status      int64  `json:"status"`
		CreatedAt   string `json:"createdat"`
		UpdatedAt   string `json:"updatedat"`
	}
	MerchantUserAddReq {
		Id          int64  `json:"id"`
		NickName    string `json:"nickname"`
		UserName    string `json:"username"`
		Email       string `json:"email"`
		Password    string `json:"password"`
		Telephone   string `json:"telephone"`
		Mobliephone string `json:"mobliephone"`
		MerchantId  int64  `json:"merchantid"`
	}
	MerchantUserUpdateReq {
		NickName    string `json:"nickname"`
		Telephone   string `json:"telephone"`
		Mobliephone string `json:"mobliephone"`
		MerchantId  int64  `json:"merchantid"`
	}
	MerchantUserGetReq {
		Id int64 `json:"id"`
	}

	MerchantUserDeleteReq {
		Id string `json:"id"`
	}
	MerchantUserDeleteReply {
		Id string `json:"id"`
	}
	MerchantUserSearchReq {
		Keyword   string `json:"keyword"`
		Status    int64  `json:"status"`
		Page      int64  `json:"page"`
		PageSize  int64  `json:"pagesize"`
		OrderBy   string `json:"orderby"`
		OrderType int64  `json:"ordertype"`
	}
	MerchantUserSearchReply {
		MechantUsers []MerchantUser `json:"merchantusers"`
		IsEnd        bool           `json:"isend"`
		LastVal      int64          `json:"lastval"`
	}
	MerchantUserLoginReq {
		UserName string `json:"username"`
		Password string `json:"password"`
		Type     int64  `json:"type"`
	}
)

service lib-api{
	@handler gettoken
	post /v1/lib/gettoken (GetTokenReq) returns (GetTokenReply)
	//merchant
	@handler merchantadd
	post /v1/lib/merchant/add (MerchantAddReq) returns (Merchant)
	@handler merchantupdate
	post /v1/lib/merchant/update (MerchantUpdateReq) returns (Merchant)
	@handler merchantget
	post /v1/lib/merchant/get (MerchantGetReq) returns (Merchant)
	@handler merchantdelete
	post /v1/lib/merchant/delete (MerchantDeleteReq) returns (MerchantDeleteReply)
	@handler merchantsearch
	post /v1/lib/merchant/search (MerchantSearchReq) returns (MerchantSearchReply)
	//merchant user
	@handler merchantuseradd
	post /v1/lib/merchant/user/add (MerchantUserAddReq) returns (MerchantUser)
	@handler merchantuserupdate
	post /v1/lib/merchant/user/update (MerchantUserUpdateReq) returns (MerchantUser)
	@handler merchantuserget
	post /v1/lib/merchant/user/get (MerchantUserGetReq) returns (MerchantUser)
	@handler merchantuserdelete
	post /v1/lib/merchant/user/delete (MerchantUserDeleteReq) returns (MerchantUserDeleteReply)
	@handler merchantusersearch
	post /v1/lib/merchant/user/search (MerchantSearchReq) returns (MerchantUserSearchReply)
	@handler merchantuserlogin
	post /v1/lib/merchant/user/login (MerchantUserLoginReq) returns (Merchant)
}